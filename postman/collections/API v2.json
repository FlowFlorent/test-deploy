{
	"info": {
		"_postman_id": "d76b8e07-e579-49b8-b079-0fc4e51b9efe",
		"name": "API v2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "22228104-d76b8e07-e579-49b8-b079-0fc4e51b9efe"
	},
	"item": [
		{
			"name": "rooms",
			"item": [
				{
					"name": "{roomId}",
					"item": [
						{
							"name": "update-room-id",
							"item": [
								{
									"name": "Update room ID",
									"id": "25165e77-4a83-4ff3-bb1a-58752270185b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"examples\": {\n    \"example\": {\n      \"value\": {\n        \"newRoomId\": \"new-room-id\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/update-room-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"update-room-id"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) The new ID for the room"
												}
											]
										},
										"description": "This endpoint permanently updates the room’s ID."
									},
									"response": [
										{
											"id": "6b1fbad6-1f09-42eb-ae4d-636bb7f621cd",
											"name": "Success. Returns the updated room with the new ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"examples\": {\n    \"example\": {\n      \"value\": {\n        \"newRoomId\": \"new-room-id\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/update-room-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"update-room-id"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "d695129e-6012-4009-a789-8da783927a54"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"room\",\n  \"lastConnectionAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {\n    \"aliqua_531\": \"<string>\"\n  },\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {}\n}"
										},
										{
											"id": "da2eea3c-49a0-4f46-b6ae-46931f03f5d6",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"examples\": {\n    \"example\": {\n      \"value\": {\n        \"newRoomId\": \"new-room-id\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/update-room-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"update-room-id"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "98f935b9-01cb-4acf-83a5-0be64fd3f481"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "33015cf7-daf3-4a2e-a9c3-b0462a5d6b9c",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"examples\": {\n    \"example\": {\n      \"value\": {\n        \"newRoomId\": \"new-room-id\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/update-room-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"update-room-id"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "18832dbd-18a5-419a-a4b2-bd180c921c67"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "b060585e-eb6b-48d5-8248-33165ab410d2",
											"name": "Room not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"examples\": {\n    \"example\": {\n      \"value\": {\n        \"newRoomId\": \"new-room-id\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/update-room-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"update-room-id"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "803504c4-d944-4ca3-a9a4-4f4337ffe0d6"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "e033c2a3-ec1a-4612-85c8-2c1b8ea52a37",
											"name": "Unprocessable entity.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"examples\": {\n    \"example\": {\n      \"value\": {\n        \"newRoomId\": \"new-room-id\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/update-room-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"update-room-id"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "ea0f902d-5ca1-4dab-92fa-c5b0b338136d"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "5cfa1843-fcf1-4e4d-b917-fea3153468d8"
						},
						{
							"name": "active_users",
							"item": [
								{
									"name": "Get active users",
									"id": "a124079e-b81a-4f37-9307-0bd21d21dcfe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/active_users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"active_users"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint returns a list of users currently present in the requested room. Corresponds to [`liveblocks.getActiveUsers`](/docs/api-reference/liveblocks-node#get-rooms-roomid-active-users). \n\nFor optimal performance, we recommend calling this endpoint no more than once every 10 seconds. \nDuplicates can occur if a user is in the requested room with multiple browser tabs opened."
									},
									"response": [
										{
											"id": "aef70bdc-e096-46d3-80f9-8c5fefd906f3",
											"name": "Success. Returns the list of active users for the specified room.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/active_users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"active_users"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "82d7523a-0b46-4e95-89b0-42b89f2befd6"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"type\": \"<string>\",\n      \"connectionId\": \"<number>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"connectionId\": \"<number>\"\n    }\n  ]\n}"
										},
										{
											"id": "56dbeaa5-0088-45df-b034-1ab3fb6e55c0",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/active_users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"active_users"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "c406c921-21de-478e-bf07-5c8bb6179fe6"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "447edddb-ad68-47ad-99c8-9857ee0944c7",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/active_users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"active_users"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "64e295cd-e7c8-45ad-b67b-7eb175f7a3db"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "a6cdaa8d-4b1e-43fb-81fc-85135f045e0b",
											"name": "Room not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/active_users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"active_users"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6d7c5bdf-4c30-4956-8773-a72025440612"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "efe86704-c2fe-4073-b025-da9a59095788"
						},
						{
							"name": "broadcast_event",
							"item": [
								{
									"name": "Broadcast event to a room",
									"id": "86d7c22d-fd06-4bcd-aec3-f0862f0da9ce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/broadcast_event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"broadcast_event"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint enables the broadcast of an event to a room without having to connect to it via the `client` from `@liveblocks/client`. It takes any valid JSON as a request body. The `connectionId` passed to event listeners is `-1` when using this API. Corresponds to [`liveblocks.broadcastEvent`](/docs/api-reference/liveblocks-node#post-broadcast-event)."
									},
									"response": [
										{
											"id": "f08b11a0-2d5e-47c3-9432-60751e4de479",
											"name": "Success. An event was broadcast to the room.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/broadcast_event",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"broadcast_event"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "bf8fb68f-76a2-47d9-8b39-725d687df51e",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/broadcast_event",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"broadcast_event"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "099a0974-3b7a-4942-bf5b-1ac4f813dd76"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "3867ccae-a5c6-4ee4-a2a2-dbde490b55c6",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/broadcast_event",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"broadcast_event"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "c54c068b-8f19-42a0-ade3-5293a76209df"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "4365492a-3ed9-490b-934c-53e551367cab",
											"name": "Room not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/broadcast_event",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"broadcast_event"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "55c22856-9016-4822-b5e3-9b14c693d8c5"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "63567110-c591-4f00-b0bc-32a7aa06113f",
											"name": "Unprocessable entity.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/broadcast_event",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"broadcast_event"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "d4058b59-c3fd-4e39-bd31-0dd95a4557fc"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "00e4ad34-e07b-4899-b205-ad7096071591"
						},
						{
							"name": "storage",
							"item": [
								{
									"name": "Get Storage document",
									"id": "2886c07f-281a-450b-9e1a-60c76aa2ba8b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/storage?format=plain-lson",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"storage"
											],
											"query": [
												{
													"key": "format",
													"value": "plain-lson",
													"description": "Use `?format=json` to output a simplified JSON representation of the Storage tree. In that format, each LiveObject and LiveMap will be formatted as a simple JSON object, and each LiveList will be formatted as a simple JSON array. This is a lossy format because information about the original data structures is not retained, but it may be easier to work with."
												}
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "Returns the contents of the room’s Storage tree.  Corresponds to [`liveblocks.getStorageDocument`](/docs/api-reference/liveblocks-node#get-rooms-roomId-storage). \n\nThe default outputted format is called “plain LSON”, which includes information on the Live data structures in the tree. These nodes show up in the output as objects with two properties, for example:\n\n```json\n{\n  \"liveblocksType\": \"LiveObject\",\n  \"data\": ...\n}\n```\n\nIf you’re not interested in this information, you can use the simpler `?format=json` query param, see below."
									},
									"response": [
										{
											"id": "01378e48-d3a3-4f77-bb0e-167d143116cf",
											"name": "Success. Returns the room’s Storage as JSON.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage?format=plain-lson",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"query": [
														{
															"description": "Use `?format=json` to output a simplified JSON representation of the Storage tree. In that format, each LiveObject and LiveMap will be formatted as a simple JSON object, and each LiveList will be formatted as a simple JSON array. This is a lossy format because information about the original data structures is not retained, but it may be easier to work with.",
															"key": "format",
															"value": "plain-lson"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "1605d15b-bac6-4f40-884f-96612181a63e"
												}
											],
											"cookie": [],
											"body": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}"
										},
										{
											"id": "64d87db2-656f-4928-9c5a-dab769e78b79",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage?format=plain-lson",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"query": [
														{
															"description": "Use `?format=json` to output a simplified JSON representation of the Storage tree. In that format, each LiveObject and LiveMap will be formatted as a simple JSON object, and each LiveList will be formatted as a simple JSON array. This is a lossy format because information about the original data structures is not retained, but it may be easier to work with.",
															"key": "format",
															"value": "plain-lson"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "5e5c8e3f-2e33-4827-975c-dc884e0fde41"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "05152897-7ad1-4bcb-a3b8-3fae3028b07d",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage?format=plain-lson",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"query": [
														{
															"description": "Use `?format=json` to output a simplified JSON representation of the Storage tree. In that format, each LiveObject and LiveMap will be formatted as a simple JSON object, and each LiveList will be formatted as a simple JSON array. This is a lossy format because information about the original data structures is not retained, but it may be easier to work with.",
															"key": "format",
															"value": "plain-lson"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "c06306a3-6673-45b5-bce1-6bc96114d41c"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "e615d254-7c22-4b41-b338-632a4c8e0933",
											"name": "Room not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage?format=plain-lson",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"query": [
														{
															"description": "Use `?format=json` to output a simplified JSON representation of the Storage tree. In that format, each LiveObject and LiveMap will be formatted as a simple JSON object, and each LiveList will be formatted as a simple JSON array. This is a lossy format because information about the original data structures is not retained, but it may be easier to work with.",
															"key": "format",
															"value": "plain-lson"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6a673cfe-c327-4b25-9d5c-f802cf9282b5"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Initialize Storage document",
									"id": "8895d8e0-f447-4324-84bd-b491b4eeaf2b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"storage"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint initializes or reinitializes a room’s Storage. The room must already exist. Calling this endpoint will disconnect all users from the room if there are any, triggering a reconnect. Corresponds to [`liveblocks.initializeStorageDocument`](/docs/api-reference/liveblocks-node#post-rooms-roomId-storage).\n\nThe format of the request body is the same as what’s returned by the get Storage endpoint.\n\nFor each Liveblocks data structure that you want to create, you need a JSON element having two properties:\n- `\"liveblocksType\"` => `\"LiveObject\" | \"LiveList\" | \"LiveMap\"`\n- `\"data\"` => contains the nested data structures (children) and data.\n\nThe root’s type can only be LiveObject.\n\nA utility function, `toPlainLson` is included in `@liveblocks/client` from `1.0.9` to help convert `LiveObject`, `LiveList`, and `LiveMap` to the structure expected by the endpoint."
									},
									"response": [
										{
											"id": "d4adb246-788c-4195-9798-f972ed912821",
											"name": "Success. The Storage is initialized. Returns the room’s Storage as JSON.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "cc80df97-b3e1-4b30-805b-600a35632237"
												}
											],
											"cookie": [],
											"body": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}"
										},
										{
											"id": "22f221d1-8492-46e6-95a6-cde53e8d46d4",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "432f061a-5fe3-4e2e-9ee3-c771cbf4c126"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "9de62b3d-0bff-4a59-b908-3e7dee6629a7",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "2c2572c3-de24-4e2d-9e84-4140ac7b2244"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "433728f9-ab5a-4522-96e5-a9fc050a8adc",
											"name": "Room not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"liveblocksType\": \"<string>\",\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "cdd19da0-15f0-4431-9f27-ff8253acd232"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete Storage document",
									"id": "a8275bfb-8849-4d65-9108-122b0290661c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"storage"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint deletes all of the room’s Storage data. Calling this endpoint will disconnect all users from the room if there are any. Corresponds to [`liveblocks.deleteStorageDocument`](/docs/api-reference/liveblocks-node#delete-rooms-roomId-storage).\n"
									},
									"response": [
										{
											"id": "91858d3f-2a72-4ff3-a341-3ebe01d1a903",
											"name": "Success. The room has no more Storage.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "83ac83df-4b43-4c77-af62-8c538331d4c9",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "283f7762-5aaa-4ccc-9465-97f8735a5875"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "572a59d4-4ae9-488b-9027-5789dbb9719a",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "94460825-c150-42ef-b52e-6eecd3edffd9"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "f783d10e-0e0c-42b3-bd6d-3435ad474dee",
											"name": "Room not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/storage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"storage"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "bd537460-17be-4bd1-91b7-a27d9172a127"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "1e11a2de-c4ed-45df-9d41-267e3d3e57cc"
						},
						{
							"name": "ydoc",
							"item": [
								{
									"name": "Get Yjs document",
									"id": "dc394d29-49d1-4f41-9fea-16af90e1c181",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/ydoc?formatting=<boolean>&key=<string>&type=yarray",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"ydoc"
											],
											"query": [
												{
													"key": "formatting",
													"value": "<boolean>",
													"description": "If present, YText will return formatting."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Returns only a single key’s value, e.g. `doc.get(key).toJSON()`."
												},
												{
													"key": "type",
													"value": "yarray",
													"description": "Used with key to override the inferred type, i.e. `\"ymap\"` will return `doc.get(key, Y.Map)`."
												}
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint returns a JSON representation of the room’s Yjs document. Corresponds to [`liveblocks.getYjsDocument`](/docs/api-reference/liveblocks-node#get-rooms-roomId-ydoc)."
									},
									"response": [
										{
											"id": "be408de1-39e0-4189-a837-00a65ababf9e",
											"name": "Success. Returns the room’s Yjs document as JSON.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?formatting=<boolean>&key=<string>&type=yarray",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "If present, YText will return formatting.",
															"key": "formatting",
															"value": "<boolean>"
														},
														{
															"description": "Returns only a single key’s value, e.g. `doc.get(key).toJSON()`.",
															"key": "key",
															"value": "<string>"
														},
														{
															"description": "Used with key to override the inferred type, i.e. `\"ymap\"` will return `doc.get(key, Y.Map)`.",
															"key": "type",
															"value": "yarray"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "97cd20cf-4f70-4ac3-8b66-42a6f178a06d"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "4bd51ddf-75cb-40cf-877c-3b7c2f6c64e9",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?formatting=<boolean>&key=<string>&type=yarray",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "If present, YText will return formatting.",
															"key": "formatting",
															"value": "<boolean>"
														},
														{
															"description": "Returns only a single key’s value, e.g. `doc.get(key).toJSON()`.",
															"key": "key",
															"value": "<string>"
														},
														{
															"description": "Used with key to override the inferred type, i.e. `\"ymap\"` will return `doc.get(key, Y.Map)`.",
															"key": "type",
															"value": "yarray"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "262d000c-8d1c-4745-98cd-1e652ecf1003"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "0082ec7a-2f1d-4b38-989f-3eb997f59fd5",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?formatting=<boolean>&key=<string>&type=yarray",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "If present, YText will return formatting.",
															"key": "formatting",
															"value": "<boolean>"
														},
														{
															"description": "Returns only a single key’s value, e.g. `doc.get(key).toJSON()`.",
															"key": "key",
															"value": "<string>"
														},
														{
															"description": "Used with key to override the inferred type, i.e. `\"ymap\"` will return `doc.get(key, Y.Map)`.",
															"key": "type",
															"value": "yarray"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "73d52ecd-98b7-4c5c-aa4b-4dd12dfd487d"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "08c1e96f-b216-426c-b5f2-cde39cd2d205",
											"name": "Room not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?formatting=<boolean>&key=<string>&type=yarray",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "If present, YText will return formatting.",
															"key": "formatting",
															"value": "<boolean>"
														},
														{
															"description": "Returns only a single key’s value, e.g. `doc.get(key).toJSON()`.",
															"key": "key",
															"value": "<string>"
														},
														{
															"description": "Used with key to override the inferred type, i.e. `\"ymap\"` will return `doc.get(key, Y.Map)`.",
															"key": "type",
															"value": "yarray"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "ae6d99b8-176e-4f0c-b7d9-d485e1ffc239"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Send a binary Yjs update",
									"id": "8cde06ff-61b6-4277-8a19-5086eb36cbcb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/octet-stream"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<array>"
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/ydoc?guid=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"ydoc"
											],
											"query": [
												{
													"key": "guid",
													"value": "<string>",
													"description": "ID of the subdocument"
												}
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint is used to send a Yjs binary update to the room’s Yjs document. You can use this endpoint to initialize Yjs data for the room or to update the room’s Yjs document. To send an update to a subdocument instead of the main document, pass its `guid`. Corresponds to [`liveblocks.sendYjsBinaryUpdate`](/docs/api-reference/liveblocks-node#put-rooms-roomId-ydoc).\n\nThe update is typically obtained by calling `Y.encodeStateAsUpdate(doc)`. See the [Yjs documentation](https://docs.yjs.dev/api/document-updates) for more details. When manually making this HTTP call, set the HTTP header `Content-Type` to `application/octet-stream`, and send the binary update (a `Uint8Array`) in the body of the HTTP request. This endpoint does not accept JSON, unlike most other endpoints."
									},
									"response": [
										{
											"id": "cbfad31c-09bc-42c6-86b9-7d6c8c29ec51",
											"name": "Success. The given room’s Yjs doc has been updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<array>"
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "7e1ad262-81c3-4e2f-8992-3149b43a3263"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": 200\n}"
										},
										{
											"id": "6730d219-cc7b-478d-8247-9f40cb8fea50",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<array>"
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "26e78893-232c-430c-ae3f-dac32f33b221"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "fba3ae84-ff67-4e44-8ebc-f8a4cf6a7d50",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<array>"
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "2b173224-5c72-4fdf-a004-76913dffccc6"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "f0b82c04-ae20-452f-8d9f-0ee114c08cf4",
											"name": "Room not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<array>"
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "f305d426-5a47-4c0a-8597-37a065cff5aa"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "5fdb18bc-fc5e-4c56-9da8-debdf8d54105"
						},
						{
							"name": "ydoc-binary",
							"item": [
								{
									"name": "Get Yjs document encoded as a binary Yjs update",
									"id": "feda86ae-d4fa-4b17-a0de-c2ce1c698b19",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/ydoc-binary?guid=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"ydoc-binary"
											],
											"query": [
												{
													"key": "guid",
													"value": "<string>",
													"description": "ID of the subdocument"
												}
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint returns the room’s Yjs document encoded as a single binary update. This can be used by `Y.applyUpdate(responseBody)` to get a copy of the document in your back end. See [Yjs documentation](https://docs.yjs.dev/api/document-updates) for more information on working with updates. To return a subdocument instead of the main document, pass its `guid`. Corresponds to [`liveblocks.getYjsDocumentAsBinaryUpdate`](/docs/api-reference/liveblocks-node#get-rooms-roomId-ydoc-binary)."
									},
									"response": [
										{
											"id": "79a16575-144a-443e-8a9b-2e4c0c0d9ba3",
											"name": "Success. Returns the room’s Yjs document encoded as a binary Yjs update.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc-binary?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc-binary"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream",
													"uuid": "e163a41f-93f1-4fa5-9277-e84cdf43c777"
												}
											],
											"cookie": [],
											"body": "<array>"
										},
										{
											"id": "7ca0400e-be4e-4b80-9920-1846b9ae2251",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc-binary?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc-binary"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "3ec1f54c-ce5b-4830-b8de-3c71cb07d52c"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "9ff81779-96c9-4c6d-b6c5-3f1f1a4bd566",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc-binary?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc-binary"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "52614245-8c40-4333-904d-719e91b6f0ad"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "0187da4b-c827-4e23-8428-b9d55ea7ec58",
											"name": "Room not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/ydoc-binary?guid=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"ydoc-binary"
													],
													"query": [
														{
															"description": "ID of the subdocument",
															"key": "guid",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "9c339a71-0c17-4632-ad24-36e577048c3d"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "d8801a65-325b-45c6-a6a4-508c8cb65e32"
						},
						{
							"name": "schema",
							"item": [
								{
									"name": "Get schema by room ID",
									"id": "cf9ece8e-e2ab-499c-a02c-8de244ef95f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"schema"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint retrieves the schema attached to a room.  Corresponds to [`liveblocks.getSchemaByRoomId`](/docs/api-reference/liveblocks-node#get-new-schema)."
									},
									"response": [
										{
											"id": "3f8bdaee-fe41-4ecf-93e2-8e548ef9e882",
											"name": "Success. Found the schema attached to the room and returns it as JSON.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6fa84ea2-c47d-4c13-9d34-9536bf16b798"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<number>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"body\": \"<string>\"\n}"
										},
										{
											"id": "b2d70fb1-f203-4669-b728-075df8400bb7",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "83c8a2a2-87b6-4495-ae97-6358171a3535"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "9d1b6ca0-01ce-4aab-bafe-63ff8755f0ab",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "693f1f8f-fc15-4874-9f64-a88252317f05"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "bf0b6630-33f4-480f-8407-9710f6d4bbbd",
											"name": "Schema not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "686dd882-e17b-4d17-b7be-2fb92d849934"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Attach schema to room",
									"id": "b544b72c-7090-443f-b987-f01dea4c3809",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schema\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"schema"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint attaches a schema to a room, and instantly enables runtime schema validation for the room. Corresponds to [`liveblocks.attachSchemaToRoom`](/docs/api-reference/liveblocks-node#post-attach-schema-to-room).\n\nIf the current contents of the room’s Storage do not match the schema, attaching will fail and the error message will give details on why the schema failed to attach."
									},
									"response": [
										{
											"id": "ddee28ca-bbeb-4913-92d6-25416c5fbab2",
											"name": "Success. Found the schema attached to the room. Returns the schema ID as JSON.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schema\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "723b5bc9-efce-40b4-b7ef-563bb1f087c9"
												}
											],
											"cookie": [],
											"body": "{\n  \"schema\": \"<string>\"\n}"
										},
										{
											"id": "9ca23106-757a-4fa9-8f0e-655244dfbd40",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schema\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "58eb2a4a-631d-4f7c-a7b9-ad4490a20fae"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "70214216-01fb-4ee7-92cd-a751d68792c0",
											"name": "Schema not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schema\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "71a49667-24c5-40bd-8074-d597896228f7"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "130c2d1b-ab47-4a56-a7ca-96903374d166",
											"name": "Existing room data does not match this schema.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schema\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "9a21c63c-e393-420a-a84a-3ef10e362019"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Detach schema from room",
									"id": "ee100101-bf0b-49ce-ba5a-7bc4b7c84d70",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"schema"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint detaches the schema from a room. Corresponds to [`liveblocks.detachSchemaFromRoom`](/docs/api-reference/liveblocks-node#delete-detach-schema-to-room)."
									},
									"response": [
										{
											"id": "0233bc8e-1681-492f-9d33-e49285f63a3d",
											"name": "Success. Detached the schema from the room.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "5b5c145a-cb3e-40ae-a8df-77a4088be6c7",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "10eaa0cc-c8b5-46e2-bb4d-b5fd67ddd4fe"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "ca026215-2588-415f-905a-2bbcb62e72fe",
											"name": "Schema not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "e25115a4-f7cc-4a56-bc71-47f9bcc2b897"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "b659c1a5-9f56-47de-9d64-88876248fbfa",
											"name": "Existing room data does not match this schema.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"schema"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "1fc22c46-7600-46be-b160-6b3f852e1bae"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "a76bec8e-7101-4643-a4c5-6edc4ee418fe"
						},
						{
							"name": "threads",
							"item": [
								{
									"name": "{threadId}",
									"item": [
										{
											"name": "participants",
											"item": [
												{
													"name": "Get thread participants",
													"id": "d5d3a988-da78-49d9-b741-0cefd1e7795e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/participants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId",
																"participants"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "threadId",
																	"value": "<string>",
																	"description": "(Required) ID of the thread"
																}
															]
														},
														"description": "This endpoint returns the list of thread participants. It is a list of unique user IDs representing all the thread comment authors and mentioned users in comments. Corresponds to [`liveblocks.getThreadParticipants`](/docs/api-reference/liveblocks-node#get-rooms-roomId-threads-threadId-participants)."
													},
													"response": [
														{
															"id": "2e0a2707-d561-44a9-84fb-e60c6552b129",
															"name": "Success. Returns the thread’s participants",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/participants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"participants"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "65fd7246-4892-4289-8844-5043c3c6e503"
																}
															],
															"cookie": [],
															"body": "{\n  \"participantIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														},
														{
															"id": "bdc2f094-aaea-4d25-bc04-c2dc829b8cc7",
															"name": "Missing or wrong credentials.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/participants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"participants"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "0b7735b6-cd75-491d-b9d0-a6c94d108ea1"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "4f0760f1-a627-4b60-83e9-d2316f84173c",
															"name": "Unauthorized access.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/participants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"participants"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "ccb30a92-3e5f-4681-84b1-46087b0689ca"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "638ad169-7aba-468a-b003-24b80f9e809d",
															"name": "Thread not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/participants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"participants"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "89acdc2a-1027-418b-8759-75d86539d812"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "c6fd6c35-b915-4c4b-ac3b-2f81a051e5be"
										},
										{
											"name": "metadata",
											"item": [
												{
													"name": "Edit thread metadata",
													"id": "ae6cd9c6-0d63-4efc-af61-1a84aa310896",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"metadata\": {},\n  \"userId\": \"<string>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId",
																"metadata"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "threadId",
																	"value": "<string>",
																	"description": "(Required) ID of the thread"
																}
															]
														},
														"description": "This endpoint edits the metadata of a thread. The metadata is a JSON object that can be used to store any information you want about the thread, in `string`, `number`, or `boolean` form. Set a property to `null` to remove it. Corresponds to [`liveblocks.editThreadMetadata`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads-threadId-metadata)."
													},
													"response": [
														{
															"id": "bb59c66e-1ff6-4e5d-b809-67d05ee30525",
															"name": "Success. Returns the updated metadata.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"metadata\": {},\n  \"userId\": \"<string>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "dc994d04-5d52-457f-a521-3a4e55505724"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"id": "39b2e6b6-381e-489d-b1d0-43cdfa1bcbf8",
															"name": "Unauthorized access.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"metadata\": {},\n  \"userId\": \"<string>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "7dbf84d4-afc2-400a-9dcf-a2102df4a1e6"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "32aea68b-e5e9-4029-9b73-d0ba3d5bf0b2",
															"name": "Thread not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"metadata\": {},\n  \"userId\": \"<string>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "e3c57db1-722d-4589-8201-a5dda50b107b"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "820de1cf-f87b-42a2-9c8b-bc8e60a844f9"
										},
										{
											"name": "mark-as-resolved",
											"item": [
												{
													"name": "Mark thread as resolved",
													"id": "6bd06a2c-55a4-48fa-9df6-6e3e2d5fe33c",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-resolved",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId",
																"mark-as-resolved"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "threadId",
																	"value": "<string>",
																	"description": "(Required) ID of the thread"
																}
															]
														},
														"description": "This endpoint marks a thread as resolved."
													},
													"response": [
														{
															"id": "ca52e656-df5e-4b03-8850-3f6337e99c26",
															"name": "Success. Returns the updated thread.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-resolved",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"mark-as-resolved"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "24c99eb0-3c29-4ceb-a644-5fc0577d6c13"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": {\n    \"const\": \"thread\"\n  },\n  \"id\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"comments\": [\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    },\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {},\n  \"resolved\": \"<boolean>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
														},
														{
															"id": "7a48f494-850f-4ec2-9341-eb79742cf663",
															"name": "Unauthorized access.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-resolved",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"mark-as-resolved"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "7600f230-7573-467e-8109-2fe66efd7922"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "dacc44cd-1330-4f88-91da-0c37acaa651c",
															"name": "Thread not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-resolved",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"mark-as-resolved"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "2012574c-9187-4ebd-bd15-9671e8f76bcd"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "f1f9d03a-c1e5-4e4e-b1fb-02a07a808d9c"
										},
										{
											"name": "mark-as-unresolved",
											"item": [
												{
													"name": "Mark thread as unresolved",
													"id": "299bd433-ed78-4282-b879-5c9db425eebd",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-unresolved",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId",
																"mark-as-unresolved"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "threadId",
																	"value": "<string>",
																	"description": "(Required) ID of the thread"
																}
															]
														},
														"description": "This endpoint marks a thread as unresolved."
													},
													"response": [
														{
															"id": "4279c638-c0b8-483b-a281-a1c0e1f69bc5",
															"name": "Success. Returns the updated thread.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-unresolved",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"mark-as-unresolved"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "3a59a25b-9fe4-4548-9a4f-3a74740498f4"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": {\n    \"const\": \"thread\"\n  },\n  \"id\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"comments\": [\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    },\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {},\n  \"resolved\": \"<boolean>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
														},
														{
															"id": "e79b9282-a416-42c9-8cc9-e83048e3cbe5",
															"name": "Unauthorized access.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-unresolved",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"mark-as-unresolved"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "3016f499-47bf-4894-b509-09f49206722d"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "8d0afab8-d59f-43b5-8487-fd475c4512d1",
															"name": "Thread not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/mark-as-unresolved",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"mark-as-unresolved"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "0fc5b838-66ef-46fb-8a6b-a30c0acf451d"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "7cc3cb60-f4c7-4414-9230-7e85f622d9cf"
										},
										{
											"name": "comments",
											"item": [
												{
													"name": "{commentId}",
													"item": [
														{
															"name": "add-reaction",
															"item": [
																{
																	"name": "Add comment reaction",
																	"id": "f05d0f26-c3c0-47c6-84eb-5510cb316224",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/add-reaction",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId",
																				"add-reaction"
																			],
																			"variable": [
																				{
																					"key": "roomId",
																					"value": "<string>",
																					"description": "(Required) ID of the room"
																				},
																				{
																					"key": "threadId",
																					"value": "<string>",
																					"description": "(Required) ID of the thread"
																				},
																				{
																					"key": "commentId",
																					"value": "<string>",
																					"description": "(Required) ID of the comment"
																				}
																			]
																		},
																		"description": "This endpoint adds a reaction to a comment. Corresponds to [`liveblocks.addCommentReaction`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads-threadId-comments-commentId-add-reaction)."
																	},
																	"response": [
																		{
																			"id": "e338f566-fb3a-4d06-8042-1baff79e54c4",
																			"name": "Success. Returns the created reaction.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/add-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"add-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "b96e1001-6fcb-48fe-8733-049cdc7c5ce3"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}"
																		},
																		{
																			"id": "ce989fc5-423d-4cbd-86a7-e758c23bfd43",
																			"name": "Missing or wrong credentials.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/add-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"add-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "73887b91-9c05-45a2-8e64-9603f96b6f51"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		},
																		{
																			"id": "cd23590e-4ec5-4106-ac87-e045b70fc81e",
																			"name": "Unauthorized access.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/add-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"add-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "74ca94a2-4caa-493c-a5dc-27310ca6464f"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		},
																		{
																			"id": "ad05819c-6539-44e8-8c5e-b810c5cd2b81",
																			"name": "Comment not found.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/add-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"add-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "11cb5f87-b1e4-40c4-b7eb-dcb92c911d08"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		},
																		{
																			"id": "1b0cef7f-d133-41f0-97b2-8b062da3de32",
																			"name": "Reaction already exists.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/add-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"add-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "29cfe3a1-277e-4e41-bb2c-fb8c93c7151d"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		}
																	]
																}
															],
															"id": "da3094f1-bea8-43f4-b497-124cd0e522b2"
														},
														{
															"name": "remove-reaction",
															"item": [
																{
																	"name": "Remove comment reaction",
																	"id": "b8549755-8744-4540-9b48-27261c9d42eb",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"removedAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/remove-reaction",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId",
																				"remove-reaction"
																			],
																			"variable": [
																				{
																					"key": "roomId",
																					"value": "<string>",
																					"description": "(Required) ID of the room"
																				},
																				{
																					"key": "threadId",
																					"value": "<string>",
																					"description": "(Required) ID of the thread"
																				},
																				{
																					"key": "commentId",
																					"value": "<string>",
																					"description": "(Required) ID of the comment"
																				}
																			]
																		},
																		"description": "This endpoint removes a comment reaction. A deleted comment reaction is no longer accessible from the API or the dashboard and it cannot be restored. Corresponds to [`liveblocks.removeCommentReaction`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads-threadId-comments-commentId-add-reaction)."
																	},
																	"response": [
																		{
																			"id": "ae5ab373-9f1c-4939-b859-d3f10d7e208c",
																			"name": "Success. The comment reaction was deleted",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"removedAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/remove-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"remove-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": null
																		},
																		{
																			"id": "51e4955b-f18d-4039-ac65-ecb1f121c6c1",
																			"name": "Missing or wrong credentials.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"removedAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/remove-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"remove-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "896080c1-741d-4e43-91dc-f11aca24c910"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		},
																		{
																			"id": "86163250-d25e-4b04-baa9-5aa7c7852af0",
																			"name": "Unauthorized access.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"removedAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/remove-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"remove-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "d489f39b-b195-4471-9cf5-ed86f19dea30"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		},
																		{
																			"id": "0f73d8d2-2eae-4a0e-acb2-4f83fa2aa770",
																			"name": "Comment not found.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"userId\": \"<string>\",\n  \"emoji\": \"<string>\",\n  \"removedAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId/remove-reaction",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"rooms",
																						":roomId",
																						"threads",
																						":threadId",
																						"comments",
																						":commentId",
																						"remove-reaction"
																					],
																					"variable": [
																						{
																							"key": "roomId"
																						},
																						{
																							"key": "threadId"
																						},
																						{
																							"key": "commentId"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json",
																					"uuid": "ac0664f9-883c-48fd-9fd0-097c0bb15274"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																		}
																	]
																}
															],
															"id": "cd753183-6f2c-4e60-ae05-3dfea75173f9"
														},
														{
															"name": "Get comment",
															"id": "a2c12598-e59f-4ede-9a87-5bb50ed9a79e",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments",
																		":commentId"
																	],
																	"variable": [
																		{
																			"key": "roomId",
																			"value": "<string>",
																			"description": "(Required) ID of the room"
																		},
																		{
																			"key": "threadId",
																			"value": "<string>",
																			"description": "(Required) ID of the thread"
																		},
																		{
																			"key": "commentId",
																			"value": "<string>",
																			"description": "(Required) ID of the comment"
																		}
																	]
																},
																"description": "This endpoint returns a comment by its ID. Corresponds to [`liveblocks.getComment`](/docs/api-reference/liveblocks-node#get-rooms-roomId-threads-threadId-comments-commentId)."
															},
															"response": [
																{
																	"id": "8766f450-e8dd-47ba-aa9e-5d27fa2e5ae8",
																	"name": "Success. Returns the requested comment.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "55e68e6a-f99c-43b9-a01e-e8faebe0324c"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"comment\",\n  \"threadId\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"editedAt\": \"<dateTime>\",\n  \"deletedAt\": \"<dateTime>\",\n  \"body\": {}\n}"
																},
																{
																	"id": "308ccfd1-96ba-434d-86f1-ae908e2773e9",
																	"name": "Missing or wrong credentials.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "cde1cf67-45ab-4761-af51-5d7e406c2c62"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "80d25988-280d-44ed-a412-3c864c1aa8ff",
																	"name": "Unauthorized access.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "271d887f-ba19-4eb1-b6c8-f8b387f02294"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "ded12307-8e21-4f8a-8f15-48dc6654d2da",
																	"name": "Thread not found.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "9ec29e0b-65aa-410a-896a-96bd76adf041"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Edit comment",
															"id": "97a03465-6f87-4bff-bf2b-e0443725d4ab",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments",
																		":commentId"
																	],
																	"variable": [
																		{
																			"key": "roomId",
																			"value": "<string>",
																			"description": "(Required) ID of the room"
																		},
																		{
																			"key": "threadId",
																			"value": "<string>",
																			"description": "(Required) ID of the thread"
																		},
																		{
																			"key": "commentId",
																			"value": "<string>",
																			"description": "(Required) ID of the comment"
																		}
																	]
																},
																"description": "This endpoint edits the specified comment. Corresponds to [`liveblocks.editComment`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads-threadId-comments-commentId).\n\nA comment’s body is an array of paragraphs, each containing child nodes. Here’s an example of how to construct a comment’s body, which can be submitted under `body`.\n\n```json\n\"version\": 1,\n\"content\": [\n  {\n    \"type\": \"paragraph\",\n    \"children\": [{ \"text\": \"Hello \" }, { \"text\": \"world\", \"bold\": true }]\n  }\n]\n"
															},
															"response": [
																{
																	"id": "9b065611-2008-4e3e-9e81-f1b6bcc3bbec",
																	"name": "Success. Returns the edited comment.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "d2c37cee-596a-4c0b-9cae-0e3a1d963939"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"editedAt\": \"<dateTime>\"\n}"
																},
																{
																	"id": "ca03a600-9593-4ae5-9163-c18920525e9a",
																	"name": "Missing or wrong credentials.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "6cdc7627-ae50-4927-8ecc-a7310837863d"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "7557902d-62ca-4e48-92f0-e86e70a4857c",
																	"name": "Unauthorized access.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "0ee89557-4e2a-4ea6-a078-ff7283afe1b5"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "ce7bff14-89b1-410e-b07e-2d4f1c8c0c26",
																	"name": "Thread not found.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "6990ae03-53b5-4b66-afa9-81ec737e2744"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "d7d60278-0e05-4324-bcc2-4eb2650c8b38",
																	"name": "Comment already exists.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "0d60cfe5-8cb8-4645-9530-2485b23b2618"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Delete comment",
															"id": "c4cb632b-7f19-4e2c-91c0-0e7d554e1031",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments",
																		":commentId"
																	],
																	"variable": [
																		{
																			"key": "roomId",
																			"value": "<string>",
																			"description": "(Required) ID of the room"
																		},
																		{
																			"key": "threadId",
																			"value": "<string>",
																			"description": "(Required) ID of the thread"
																		},
																		{
																			"key": "commentId",
																			"value": "<string>",
																			"description": "(Required) ID of the comment"
																		}
																	]
																},
																"description": "This endpoint deletes a comment. A deleted comment is no longer accessible from the API or the dashboard and it cannot be restored. Corresponds to [`liveblocks.deleteComment`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads-threadId-comments-commentId)."
															},
															"response": [
																{
																	"id": "42f38856-e473-4bb2-bb64-53d3bc514514",
																	"name": "Success. The comment was deleted",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																},
																{
																	"id": "2ec0cc1b-8978-4e8e-a311-ae1263a48808",
																	"name": "Missing or wrong credentials.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "dd452537-2110-4b65-89ab-19e86fc658a7"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "05d0d469-aff8-4eba-94c6-cc3a421d9c9f",
																	"name": "Unauthorized access.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "cbc58666-dadc-4409-a5fd-da5406af3d25"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																},
																{
																	"id": "21148b6a-c4fa-4326-88a2-91b177c37616",
																	"name": "Comment not found.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments/:commentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rooms",
																				":roomId",
																				"threads",
																				":threadId",
																				"comments",
																				":commentId"
																			],
																			"variable": [
																				{
																					"key": "roomId"
																				},
																				{
																					"key": "threadId"
																				},
																				{
																					"key": "commentId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "cf29df8e-8306-46b0-bf9e-38c0bad7e0fe"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
																}
															]
														}
													],
													"id": "410f83f3-7ada-4143-ab40-d9a425c38022"
												},
												{
													"name": "Create comment",
													"id": "8201832b-5dc7-448c-849e-b56e0a9fa9d6",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId",
																"comments"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "threadId",
																	"value": "<string>",
																	"description": "(Required) ID of the thread"
																}
															]
														},
														"description": "This endpoint creates a new comment, adding it as a reply to a thread. Corresponds to [`liveblocks.createComment`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads-threadId-comments).\n\nA comment’s body is an array of paragraphs, each containing child nodes. Here’s an example of how to construct a comment’s body, which can be submitted under `body`.\n\n```json\n\"version\": 1,\n\"content\": [\n  {\n    \"type\": \"paragraph\",\n    \"children\": [{ \"text\": \"Hello \" }, { \"text\": \"world\", \"bold\": true }]\n  }\n]\n"
													},
													"response": [
														{
															"id": "5a4a8530-dcd7-40dc-a371-4507166adb04",
															"name": "Success. Returns the created comment.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "8283ceda-a644-400c-ae07-1284c480ef1d"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"comment\",\n  \"threadId\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"editedAt\": \"<dateTime>\",\n  \"deletedAt\": \"<dateTime>\",\n  \"body\": {}\n}"
														},
														{
															"id": "69fcf57a-45a0-4d2c-acbf-c9e7081022bf",
															"name": "Missing or wrong credentials.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "4066d33b-e98e-43de-95fd-c9960a5d8867"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "7d450c17-f83a-4f38-b175-6bd1b65241ee",
															"name": "Unauthorized access.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "5f7bc3b2-3c6a-4f58-b076-920c93e74294"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "73086fad-6733-4e0e-9786-e1cc7b26be4b",
															"name": "Thread not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "0333eb5e-2322-40df-b607-73ca74667c7e"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														},
														{
															"id": "1cb2871e-ab6a-40ed-b0d0-cc270dfd3b7b",
															"name": "Comment already exists.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"userId\": \"<string>\",\n  \"body\": {\n    \"version\": \"<number>\"\n  },\n  \"createdAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"threads",
																		":threadId",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "threadId"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "01f8170a-a242-4d3b-b3dc-26f625d94dfb"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "b3bf7b6e-9ec5-4476-9951-e0265268ff74"
										},
										{
											"name": "Get thread",
											"id": "932bff90-de01-42bf-b9c1-8a6683ec5c87",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads",
														":threadId"
													],
													"variable": [
														{
															"key": "roomId",
															"value": "<string>",
															"description": "(Required) ID of the room"
														},
														{
															"key": "threadId",
															"value": "<string>",
															"description": "(Required) ID of the thread"
														}
													]
												},
												"description": "This endpoint returns a thread by its ID. Corresponds to [`liveblocks.getThread`](/docs/api-reference/liveblocks-node#get-rooms-roomId-threads-threadId)."
											},
											"response": [
												{
													"id": "0220cb86-640c-4400-8223-aadeb28973be",
													"name": "Success. Returns requested thread.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "7c46f390-97a4-4abe-838c-d208a8b67e3b"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": {\n    \"const\": \"thread\"\n  },\n  \"id\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"comments\": [\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    },\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {},\n  \"resolved\": \"<boolean>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
												},
												{
													"id": "7210e91c-9741-430b-91ae-547f2b4addee",
													"name": "Missing or wrong credentials.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "f3c501f6-e726-49d6-a267-af1c7e272c3c"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												},
												{
													"id": "9d27d24e-0c56-46f1-bac3-da99bd6bb7af",
													"name": "Unauthorized access.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "83ad589d-50a7-484d-a945-cbccc2bf4752"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												},
												{
													"id": "f6813f17-6ea5-469f-b90c-47d9af0f16ad",
													"name": "Thread not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "3fb7884b-be76-41c4-89df-fff3e9f5bea0"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Delete thread",
											"id": "eba66483-4cec-4148-815d-fffa1b4585f2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads",
														":threadId"
													],
													"variable": [
														{
															"key": "roomId",
															"value": "<string>",
															"description": "(Required) ID of the room"
														},
														{
															"key": "threadId",
															"value": "<string>",
															"description": "(Required) ID of the thread"
														}
													]
												},
												"description": "This endpoint deletes a thread by its ID. Corresponds to [`liveblocks.deleteThread`](/docs/api-reference/liveblocks-node#delete-rooms-roomId-threads-threadId)."
											},
											"response": [
												{
													"id": "d7fafe52-68b9-4f56-80f6-75385a22beb9",
													"name": "Success. The thread has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"id": "9c333278-60aa-4b3c-93ab-c93634b31b56",
													"name": "Missing or wrong credentials.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "7359317b-75fb-44f1-94c8-a38fe02670bd"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												},
												{
													"id": "72f49668-db0c-461f-b4ba-cf748109f0dd",
													"name": "Unauthorized access.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "b1e96b71-affc-496c-81f3-e758b7ee58ab"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												},
												{
													"id": "1933f41e-7fed-4f2a-a613-ec264bd257ae",
													"name": "Thread not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/threads/:threadId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"threads",
																":threadId"
															],
															"variable": [
																{
																	"key": "roomId"
																},
																{
																	"key": "threadId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "c04202f4-bf4f-4839-b1ff-b5a7ef345a12"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "edeae45b-f9e4-4d5f-ad1f-c3f5e2435686"
								},
								{
									"name": "Get room threads",
									"id": "612abc7b-994b-4bf9-8db0-e8d64f3aaa02",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/threads?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"threads"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>",
													"description": "Query to filter threads. You can filter by `metadata` and `resolved`, for example, `metadata[\"status\"]:\"open\" AND metadata[\"color\"]:\"red\" AND resolved:true`. Learn more about [filtering threads with query language](/docs/guides/how-to-filter-threads-using-query-language)."
												}
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint returns the threads in the requested room. Corresponds to [`liveblocks.getThreads`](/docs/api-reference/liveblocks-node#get-rooms-roomId-threads)."
									},
									"response": [
										{
											"id": "f43cfcb6-0c45-4da8-8f18-4bd80127d58d",
											"name": "Success. Returns list of threads in a room.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"query": [
														{
															"description": "Query to filter threads. You can filter by `metadata` and `resolved`, for example, `metadata[\"status\"]:\"open\" AND metadata[\"color\"]:\"red\" AND resolved:true`. Learn more about [filtering threads with query language](/docs/guides/how-to-filter-threads-using-query-language).",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6e29b24f-76fa-4077-98a2-0be2780cd23e"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"type\": {\n        \"const\": \"thread\"\n      },\n      \"id\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"comments\": [\n        {\n          \"type\": \"comment\",\n          \"threadId\": \"<string>\",\n          \"roomId\": \"<string>\",\n          \"id\": \"<string>\",\n          \"userId\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"editedAt\": \"<dateTime>\",\n          \"deletedAt\": \"<dateTime>\",\n          \"body\": {}\n        },\n        {\n          \"type\": \"comment\",\n          \"threadId\": \"<string>\",\n          \"roomId\": \"<string>\",\n          \"id\": \"<string>\",\n          \"userId\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"editedAt\": \"<dateTime>\",\n          \"deletedAt\": \"<dateTime>\",\n          \"body\": {}\n        }\n      ],\n      \"createdAt\": \"<dateTime>\",\n      \"metadata\": {},\n      \"resolved\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    {\n      \"type\": {\n        \"const\": \"thread\"\n      },\n      \"id\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"comments\": [\n        {\n          \"type\": \"comment\",\n          \"threadId\": \"<string>\",\n          \"roomId\": \"<string>\",\n          \"id\": \"<string>\",\n          \"userId\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"editedAt\": \"<dateTime>\",\n          \"deletedAt\": \"<dateTime>\",\n          \"body\": {}\n        },\n        {\n          \"type\": \"comment\",\n          \"threadId\": \"<string>\",\n          \"roomId\": \"<string>\",\n          \"id\": \"<string>\",\n          \"userId\": \"<string>\",\n          \"createdAt\": \"<dateTime>\",\n          \"editedAt\": \"<dateTime>\",\n          \"deletedAt\": \"<dateTime>\",\n          \"body\": {}\n        }\n      ],\n      \"createdAt\": \"<dateTime>\",\n      \"metadata\": {},\n      \"resolved\": \"<boolean>\",\n      \"updatedAt\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"id": "09224f83-1d52-41f1-91e5-435f60c9024d",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"query": [
														{
															"description": "Query to filter threads. You can filter by `metadata` and `resolved`, for example, `metadata[\"status\"]:\"open\" AND metadata[\"color\"]:\"red\" AND resolved:true`. Learn more about [filtering threads with query language](/docs/guides/how-to-filter-threads-using-query-language).",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "999810bf-21d9-41bc-8450-0c182ede2447"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "c71bb83e-32d2-4df9-930e-b1232887329a",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"query": [
														{
															"description": "Query to filter threads. You can filter by `metadata` and `resolved`, for example, `metadata[\"status\"]:\"open\" AND metadata[\"color\"]:\"red\" AND resolved:true`. Learn more about [filtering threads with query language](/docs/guides/how-to-filter-threads-using-query-language).",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "24bfe543-2c42-4cfc-bac7-79378e200d3f"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "14061e7b-ae35-4655-8b11-b6a9c4d5a9ae",
											"name": "Thread not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"query": [
														{
															"description": "Query to filter threads. You can filter by `metadata` and `resolved`, for example, `metadata[\"status\"]:\"open\" AND metadata[\"color\"]:\"red\" AND resolved:true`. Learn more about [filtering threads with query language](/docs/guides/how-to-filter-threads-using-query-language).",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "e492a47c-0c3f-4b54-8dd4-04f02994d679"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create thread",
									"id": "5885ed75-b35d-42f0-8b9f-4c804ca380a0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": {\n    \"userId\": \"<string>\",\n    \"body\": {\n      \"version\": \"<number>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/threads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"threads"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "This endpoint creates a new thread and the first comment in the thread. Corresponds to [`liveblocks.createThread`](/docs/api-reference/liveblocks-node#post-rooms-roomId-threads).\n\nA comment’s body is an array of paragraphs, each containing child nodes. Here’s an example of how to construct a comment’s body, which can be submitted under `comment.body`.\n\n```json\n\"version\": 1,\n\"content\": [\n  {\n    \"type\": \"paragraph\",\n    \"children\": [{ \"text\": \"Hello \" }, { \"text\": \"world\", \"bold\": true }]\n  }\n]\n```"
									},
									"response": [
										{
											"id": "0b22cfdd-d85b-4579-91ea-4cd321a21ea4",
											"name": "Success. Returns the created thread.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": {\n    \"userId\": \"<string>\",\n    \"body\": {\n      \"version\": \"<number>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6096144b-f208-4bcd-947d-0df10eb15793"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": {\n    \"const\": \"thread\"\n  },\n  \"id\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"comments\": [\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    },\n    {\n      \"type\": \"comment\",\n      \"threadId\": \"<string>\",\n      \"roomId\": \"<string>\",\n      \"id\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"editedAt\": \"<dateTime>\",\n      \"deletedAt\": \"<dateTime>\",\n      \"body\": {}\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {},\n  \"resolved\": \"<boolean>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
										},
										{
											"id": "b15c2edf-10ed-49e4-abd4-8f2b75c55c00",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": {\n    \"userId\": \"<string>\",\n    \"body\": {\n      \"version\": \"<number>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "1b94a693-ebef-4f5c-8a3d-950d5622bb9f"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "10a2d7a9-e076-4ba7-be89-f117276452ec",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": {\n    \"userId\": \"<string>\",\n    \"body\": {\n      \"version\": \"<number>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "467cd9e7-570e-42b7-8434-28d2d6ae35dc"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "dfa4bee8-d8ef-4ac2-8832-2e1fa3256a2c",
											"name": "Thread already exists.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": {\n    \"userId\": \"<string>\",\n    \"body\": {\n      \"version\": \"<number>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  },\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/threads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"threads"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "040ebb5d-9057-4f3b-a878-753cb22fc41e"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "ce01ca73-49c3-42d3-bab9-2109d4101714"
						},
						{
							"name": "authorize",
							"item": [
								{
									"name": "Get single-room token with secret key",
									"id": "08928f4a-e489-4112-8149-7c8f6ee94372",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId/authorize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId",
												"authorize"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "<string>",
													"description": "(Required) ID of the room"
												}
											]
										},
										"description": "**Deprecated.** Prefer using [access tokens](#post-authorize-user) or [ID tokens](#post-identify-user) instead. Read more in our [migration guide](/docs/platform/upgrading/1.2).\n\nThis endpoint lets your application server (your back end) obtain a token that one of its clients (your frontend) can use to enter a Liveblocks room. You use this endpoint to implement your own application’s custom authentication endpoint. When making this request, you’ll have to use your secret key.\n\nYou can pass the property `userId` in the request’s body. This can be whatever internal identifier you use for your user accounts as long as it uniquely identifies an account. Setting the `userId` is optional if you want to use public rooms, but it is required to enter a private room (because permissions are assigned to specific user IDs). In case you want to use the group permission system, you can also declare which `groupIds` this user belongs to.\n\nThe property userId is used by Liveblocks to calculate your account’s Monthly Active Users. One unique userId corresponds to one MAU. If you don’t pass a userId, we will create for you a new anonymous userId on each connection, but your MAUs will be higher.\n\nAdditionally, you can set custom metadata to the token, which will be publicly accessible by other clients through the `user.info` property. This is useful for storing static data like avatar images or the user’s display name."
									},
									"response": [
										{
											"id": "4822857a-443c-47d1-ab77-30e9a063f272",
											"name": "Success. Returns an old-style single-room token.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"authorize"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6c679fde-dabd-495f-ba51-7693664cbe46"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"<string>\"\n}"
										},
										{
											"id": "fd8a30bb-8747-49a3-84de-64dd566cc873",
											"name": "Missing or wrong credentials.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"authorize"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "627446d9-17c7-467b-9381-9b7450996902"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "323be1cb-0584-4561-83d5-9696c39bb628",
											"name": "Unauthorized access.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"authorize"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "08bbc266-415c-4939-8475-391c48aa365c"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "fc28f3a1-b6fa-4c8b-b7c1-b2e044ecacea",
											"name": "Room not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"authorize"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "85efd595-e22b-459a-807a-cbfe4b845bbe"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										},
										{
											"id": "cc4fdcf1-baa2-4aa0-a2be-8ab1e696d268",
											"name": "Unprocessable entity.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"authorize"
													],
													"variable": [
														{
															"key": "roomId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "6fc4c7ac-ccda-461c-96f3-fec0c1f8d64a"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e8a4c713-061f-4e8e-a3c0-9d71253688a9"
						},
						{
							"name": "public",
							"item": [
								{
									"name": "authorize",
									"item": [
										{
											"name": "Get single-room token with public key",
											"id": "74008225-324f-4236-87ed-1c1b7737b087",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"publicApiKey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rooms/:roomId/public/authorize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rooms",
														":roomId",
														"public",
														"authorize"
													],
													"variable": [
														{
															"key": "roomId",
															"value": "<string>",
															"description": "(Required) ID of the room"
														}
													]
												},
												"description": "**Deprecated.** When you update Liveblocks to 1.2, you no longer need to get a JWT token when using a public key.\n\nThis endpoint works with the public key and can be used client side. That means you don’t need to implement a dedicated authorization endpoint server side. \nThe generated JWT token works only with public room (`defaultAccesses: [\"room:write\"]`)."
											},
											"response": [
												{
													"id": "d9d5821a-9e71-462f-a7e9-ebcb4b7fb49a",
													"name": "Success. Returns the JWT token.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"publicApiKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/public/authorize",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"public",
																"authorize"
															],
															"variable": [
																{
																	"key": "roomId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "09fd3571-a48d-4dc2-b6cc-416765d45c62"
														}
													],
													"cookie": [],
													"body": "{\n  \"token\": \"<string>\"\n}"
												},
												{
													"id": "db83ff00-1214-4dfc-94e0-d6382731b139",
													"name": "Unauthorized access.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"publicApiKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/public/authorize",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"public",
																"authorize"
															],
															"variable": [
																{
																	"key": "roomId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "74972c6c-f9f2-4d9a-869c-a2c37e215272"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												},
												{
													"id": "e6d716a7-7525-4ca0-80a4-182837f14f49",
													"name": "Room not found.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"publicApiKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/public/authorize",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"public",
																"authorize"
															],
															"variable": [
																{
																	"key": "roomId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "ce5edbc3-560e-48e9-a27e-1dddf5ca841b"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												},
												{
													"id": "f8da435e-351b-421f-be4a-555d393cf112",
													"name": "Unprocessable entity.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"publicApiKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/public/authorize",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"public",
																"authorize"
															],
															"variable": [
																{
																	"key": "roomId"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "020b3533-d0b2-4436-857e-8b4123df4bb2"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "a95fca2a-a693-42b5-8157-c00dfb7385cc"
								}
							],
							"id": "773cdaa1-68b6-4559-98c2-c794a0a1f614"
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "notification-settings",
											"item": [
												{
													"name": "Get room notification settings",
													"id": "43bb226a-5292-459c-b863-50042f0813f5",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"users",
																":userId",
																"notification-settings"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) ID of the user"
																}
															]
														},
														"description": "This endpoint returns a user’s notification settings for a specific room. Corresponds to [`liveblocks.getRoomNotificationSettings`](/docs/api-reference/liveblocks-node#get-rooms-roomId-users-userId-notification-settings)."
													},
													"response": [
														{
															"id": "f7f64be8-6294-4135-98d5-e753d9f461c6",
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "ca6d297b-a3dc-4082-9007-1ff481fff198"
																}
															],
															"cookie": [],
															"body": "{\n  \"threads\": \"none\"\n}"
														},
														{
															"id": "c16815cc-bd67-4dde-9089-d203be6b2378",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "1838edfa-f03d-497b-9bc2-a984dac8e52c",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "1ba95ff0-e253-40d8-960c-949012182357",
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												},
												{
													"name": "Update room notification settings",
													"id": "65a30a41-cec8-483a-8cbd-304d18866754",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"threads\": \"none\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"users",
																":userId",
																"notification-settings"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) ID of the user"
																}
															]
														},
														"description": "This endpoint updates a user’s notification settings for a specific room. Corresponds to [`liveblocks.updateRoomNotificationSettings`](/docs/api-reference/liveblocks-node#post-rooms-roomId-users-userId-notification-settings)."
													},
													"response": [
														{
															"id": "73e611b1-f9c7-4bd6-aba8-fd6615e2b061",
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"threads\": \"none\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "013f058a-58a8-4a95-9d07-310114cabc70"
																}
															],
															"cookie": [],
															"body": "{\n  \"threads\": \"none\"\n}"
														},
														{
															"id": "85df9fc6-c1bf-432b-91d4-4010c21149ec",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"threads\": \"none\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "e1b3762b-0b0b-4c8d-b193-2e97ed13de78",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"threads\": \"none\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "36babda2-f491-4808-a2da-6ebb0dd358d8",
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"threads\": \"none\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "3712077d-3187-4523-9f19-a8c54a2032a0",
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"threads\": \"none\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												},
												{
													"name": "Delete room notification settings",
													"id": "b467229a-6fd1-4dbf-916a-2778082b3a9a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rooms",
																":roomId",
																"users",
																":userId",
																"notification-settings"
															],
															"variable": [
																{
																	"key": "roomId",
																	"value": "<string>",
																	"description": "(Required) ID of the room"
																},
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) ID of the user"
																}
															]
														},
														"description": "This endpoint deletes a user’s notification settings for a specific room. Corresponds to [`liveblocks.deleteRoomNotificationSettings`](/docs/api-reference/liveblocks-node#delete-rooms-roomId-users-userId-notification-settings)."
													},
													"response": [
														{
															"id": "c04b0ac6-ed53-479e-8ed7-5034d7d7c9c1",
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "6caaa0fe-0d25-4246-a0e3-267f8f98c8cb",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "77c9c522-893d-4b9e-b836-5ca30d1291f6",
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														},
														{
															"id": "7cc2af21-2838-45af-9df1-b8315959aba7",
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rooms/:roomId/users/:userId/notification-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rooms",
																		":roomId",
																		"users",
																		":userId",
																		"notification-settings"
																	],
																	"variable": [
																		{
																			"key": "roomId"
																		},
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											],
											"id": "1e4bed04-86ac-4243-88d5-eb25c97f6e61"
										}
									],
									"id": "95645e49-063a-490d-8df2-62c924789ce7"
								}
							],
							"id": "254198a0-6728-4591-80bc-d8e058790879"
						},
						{
							"name": "Get room",
							"id": "14f7ad5e-6514-4f80-b001-3ea0aa47d2ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rooms/:roomId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms",
										":roomId"
									],
									"variable": [
										{
											"key": "roomId",
											"value": "<string>",
											"description": "(Required) ID of the room"
										}
									]
								},
								"description": "This endpoint returns a room by its ID. Corresponds to [`liveblocks.getRoom`](/docs/api-reference/liveblocks-node#get-rooms-roomid)."
							},
							"response": [
								{
									"id": "01c7b761-6e2d-46e1-9f08-b5fd42257ff5",
									"name": "Success. Returns the room.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "895611fe-f6b7-4165-bef4-c62d13b4854a"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"room\",\n  \"lastConnectionAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {\n    \"aliqua_531\": \"<string>\"\n  },\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {}\n}"
								},
								{
									"id": "9c23c80d-a07e-4427-893f-2ea15203f32b",
									"name": "Missing or wrong credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "9d33e9c5-9382-4cff-bdd7-d8cf299e4172"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "052a59fd-06d2-4cf1-9ff0-457c75f20186",
									"name": "Unauthorized access.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "e3ceeffe-edaf-45c7-a203-e44eb51dcd49"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "6917c23a-a1a8-45b9-b6ae-bbad9ff46ebd",
									"name": "Room not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "41ee6c20-922b-4510-b811-dfd7e41f28e4"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update room",
							"id": "832e8f79-5d22-4209-86b1-f58c3b75ae3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": null,\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rooms/:roomId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms",
										":roomId"
									],
									"variable": [
										{
											"key": "roomId",
											"value": "<string>",
											"description": "(Required) ID of the room"
										}
									]
								},
								"description": "This endpoint updates specific properties of a room. Corresponds to [`liveblocks.updateRoom`](/docs/api-reference/liveblocks-node#post-rooms-roomid). \n\nIt’s not necessary to provide the entire room’s information. \nSetting a property to `null` means to delete this property. For example, if you want to remove access to a specific user without losing other users: \n``{\n    \"usersAccesses\": {\n        \"john\": null\n    }\n}``\n`defaultAccessess`, `metadata`, `usersAccesses`, `groupsAccesses` can be updated.\n\n- `defaultAccessess` could be `[]` or `[\"room:write\"]` (private or public). \n- `metadata` could be key/value as `string` or `string[]`. `metadata` supports maximum 50 entries. Key length has a limit of 40 characters maximum. Value length has a limit of 256 characters maximum. `metadata` is optional field.\n- `usersAccesses` could be `[]` or `[\"room:write\"]` for every records. `usersAccesses` can contain 100 ids maximum. Id length has a limit of 256 characters. `usersAccesses` is optional field.\n- `groupsAccesses` could be `[]` or `[\"room:write\"]` for every records. `groupsAccesses` can contain 100 ids maximum. Id length has a limit of 256 characters. `groupsAccesses` is optional field."
							},
							"response": [
								{
									"id": "008ca4c3-a4a4-4bd5-a58a-27b7e93fbc28",
									"name": "Success. Returns the updated room.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": null,\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "1dfc9347-2e2d-4a04-b1e6-7f6eb9a24bc2"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"room\",\n  \"lastConnectionAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {\n    \"aliqua_531\": \"<string>\"\n  },\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {}\n}"
								},
								{
									"id": "80f46ec5-03a4-4b89-af71-d7e003fbb31b",
									"name": "Missing or wrong credentials.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": null,\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "13b06c75-6773-4322-9bbf-4c529baeaa80"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "280ebabb-3a8b-4234-8183-c174360bdeb1",
									"name": "Unauthorized access.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": null,\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "47b86c5b-4f47-4816-880d-23d473a80636"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "925ce981-2f4f-44a7-8915-1e165a7279d5",
									"name": "Room not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": null,\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "a587add7-fec4-4ecc-9a21-88baf72c10c3"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "26d13ccc-0e52-4889-b9f7-1366e4ce1947",
									"name": "Unprocessable entity.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": null,\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "f689bd77-d86c-4757-850a-45a3d30041b3"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete room",
							"id": "56b06ad0-a153-45c3-95bd-1a0c059a6d42",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rooms/:roomId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms",
										":roomId"
									],
									"variable": [
										{
											"key": "roomId",
											"value": "<string>",
											"description": "(Required) ID of the room"
										}
									]
								},
								"description": "This endpoint deletes a room. A deleted room is no longer accessible from the API or the dashboard and it cannot be restored. Corresponds to [`liveblocks.deleteRoom`](/docs/api-reference/liveblocks-node#delete-rooms-roomid)."
							},
							"response": [
								{
									"id": "d12d5897-11e5-475e-9665-aac7d568de41",
									"name": "Success. The room was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"id": "f2b1ed2f-fe98-4bd1-bc9f-10d8a7ec1bae",
									"name": "Missing or wrong credentials.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "e62d4104-a4db-4f78-8400-4ee6dfa32092"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "d24267e2-f487-4118-ab17-8b79387a2537",
									"name": "Unauthorized access.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "a195b454-5e86-4aaf-8825-7aa9eb105d92"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "e3356a1e-29c8-4602-8d9d-467725a73025",
									"name": "Room not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "da76fb44-3800-4d5e-bee3-8c6945af9e14"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "3433c23e-e156-4ff7-9587-fb0e763e6b41",
									"name": "Unprocessable entity.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rooms/:roomId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rooms",
												":roomId"
											],
											"variable": [
												{
													"key": "roomId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "7c869555-1b86-4f5e-a388-a382297e7de7"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "b74f729b-99cc-48f2-9c07-32ed62813436"
				},
				{
					"name": "Get rooms",
					"id": "c35c5012-108f-454f-b37e-0d626d238ee6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rooms?limit=20&startingAfter=<string>&query=<string>&userId=<string>&groupIds=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rooms"
							],
							"query": [
								{
									"key": "limit",
									"value": "20",
									"description": "A limit on the number of rooms to be returned. The limit can range between 1 and 100, and defaults to 20."
								},
								{
									"key": "startingAfter",
									"value": "<string>",
									"description": "A cursor used for pagination. Get the value from the `nextCursor` response of the previous page."
								},
								{
									"key": "query",
									"value": "<string>",
									"description": "Query to filter rooms. You can filter by `roomId` and `metadata`, for example, `metadata[\"roomType\"]:\"whiteboard\" AND roomId^\"liveblocks:engineering\"`. Learn more about [filtering rooms with query language](/docs/guides/how-to-filter-rooms-using-query-language)."
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "A filter on users accesses."
								},
								{
									"key": "groupIds",
									"value": "<string>",
									"description": "A filter on groups accesses. Multiple groups can be used."
								}
							]
						},
						"description": "This endpoint returns a list of your rooms. The rooms are returned sorted by creation date, from newest to oldest. You can filter rooms by room ID prefixes, metadata, users accesses, and groups accesses. Corresponds to [`liveblocks.getRooms`](/docs/api-reference/liveblocks-node#get-rooms).\n\nThere is a pagination system where the next page URL is returned in the response as `nextPage`. You can also paginate by using `nextCursor` in combination with `startingAfter`.\nYou can also limit the number of rooms by query.\n\nFiltering by metadata works by giving key values like `metadata.color=red`. Of course you can combine multiple metadata clauses to refine the response like `metadata.color=red&metadata.type=text`. Notice here the operator AND is applied between each clauses.\n\nFiltering by groups or userId works by giving a list of groups like `groupIds=marketing,GZo7tQ,product` or/and a userId like `userId=user1`.\nNotice here the operator OR is applied between each `groupIds` and the `userId`.\n"
					},
					"response": [
						{
							"id": "63c5e0b9-3138-4fa7-a2c3-5078af902738",
							"name": "Success. Returns the list of rooms, the next page cursor, and the next page URL.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rooms?limit=20&startingAfter=<string>&query=<string>&userId=<string>&groupIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									],
									"query": [
										{
											"description": "A limit on the number of rooms to be returned. The limit can range between 1 and 100, and defaults to 20.",
											"key": "limit",
											"value": "20"
										},
										{
											"description": "A cursor used for pagination. Get the value from the `nextCursor` response of the previous page.",
											"key": "startingAfter",
											"value": "<string>"
										},
										{
											"description": "Query to filter rooms. You can filter by `roomId` and `metadata`, for example, `metadata[\"roomType\"]:\"whiteboard\" AND roomId^\"liveblocks:engineering\"`. Learn more about [filtering rooms with query language](/docs/guides/how-to-filter-rooms-using-query-language).",
											"key": "query",
											"value": "<string>"
										},
										{
											"description": "A filter on users accesses.",
											"key": "userId",
											"value": "<string>"
										},
										{
											"description": "A filter on groups accesses. Multiple groups can be used.",
											"key": "groupIds",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "44cdbc3c-3a9d-4fe7-868a-d5e934dfee5f"
								}
							],
							"cookie": [],
							"body": "{\n  \"nextPage\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"lastConnectionAt\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"metadata\": {},\n      \"defaultAccesses\": \"enim dolor\",\n      \"usersAccesses\": {},\n      \"groupsAccesses\": {}\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"lastConnectionAt\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"metadata\": {},\n      \"usersAccesses\": {},\n      \"groupsAccesses\": {}\n    }\n  ]\n}"
						},
						{
							"id": "4f8d8c37-9153-4d85-89b4-a37f90d9e8e9",
							"name": "Missing or wrong credentials.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rooms?limit=20&startingAfter=<string>&query=<string>&userId=<string>&groupIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									],
									"query": [
										{
											"description": "A limit on the number of rooms to be returned. The limit can range between 1 and 100, and defaults to 20.",
											"key": "limit",
											"value": "20"
										},
										{
											"description": "A cursor used for pagination. Get the value from the `nextCursor` response of the previous page.",
											"key": "startingAfter",
											"value": "<string>"
										},
										{
											"description": "Query to filter rooms. You can filter by `roomId` and `metadata`, for example, `metadata[\"roomType\"]:\"whiteboard\" AND roomId^\"liveblocks:engineering\"`. Learn more about [filtering rooms with query language](/docs/guides/how-to-filter-rooms-using-query-language).",
											"key": "query",
											"value": "<string>"
										},
										{
											"description": "A filter on users accesses.",
											"key": "userId",
											"value": "<string>"
										},
										{
											"description": "A filter on groups accesses. Multiple groups can be used.",
											"key": "groupIds",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "25e06f87-9166-43a8-9d6e-c79459e4e647"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						},
						{
							"id": "9042c553-a9e3-4831-a492-9b180f4cccd9",
							"name": "Unauthorized access.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rooms?limit=20&startingAfter=<string>&query=<string>&userId=<string>&groupIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									],
									"query": [
										{
											"description": "A limit on the number of rooms to be returned. The limit can range between 1 and 100, and defaults to 20.",
											"key": "limit",
											"value": "20"
										},
										{
											"description": "A cursor used for pagination. Get the value from the `nextCursor` response of the previous page.",
											"key": "startingAfter",
											"value": "<string>"
										},
										{
											"description": "Query to filter rooms. You can filter by `roomId` and `metadata`, for example, `metadata[\"roomType\"]:\"whiteboard\" AND roomId^\"liveblocks:engineering\"`. Learn more about [filtering rooms with query language](/docs/guides/how-to-filter-rooms-using-query-language).",
											"key": "query",
											"value": "<string>"
										},
										{
											"description": "A filter on users accesses.",
											"key": "userId",
											"value": "<string>"
										},
										{
											"description": "A filter on groups accesses. Multiple groups can be used.",
											"key": "groupIds",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "f3c2a0f7-130f-4eae-b5c9-189cf1aa4eaa"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						},
						{
							"id": "0eb8f6f0-f552-4643-ba8c-47a811d3cb15",
							"name": "Unprocessable entity.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rooms?limit=20&startingAfter=<string>&query=<string>&userId=<string>&groupIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									],
									"query": [
										{
											"description": "A limit on the number of rooms to be returned. The limit can range between 1 and 100, and defaults to 20.",
											"key": "limit",
											"value": "20"
										},
										{
											"description": "A cursor used for pagination. Get the value from the `nextCursor` response of the previous page.",
											"key": "startingAfter",
											"value": "<string>"
										},
										{
											"description": "Query to filter rooms. You can filter by `roomId` and `metadata`, for example, `metadata[\"roomType\"]:\"whiteboard\" AND roomId^\"liveblocks:engineering\"`. Learn more about [filtering rooms with query language](/docs/guides/how-to-filter-rooms-using-query-language).",
											"key": "query",
											"value": "<string>"
										},
										{
											"description": "A filter on users accesses.",
											"key": "userId",
											"value": "<string>"
										},
										{
											"description": "A filter on groups accesses. Multiple groups can be used.",
											"key": "groupIds",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "99ac2b06-4ee7-4e47-bbb6-0d5e93df48ac"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create room",
					"id": "6f284af6-b722-4f62-ba15-3d0f924a7f88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rooms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rooms"
							]
						},
						"description": "This endpoint creates a new room. `id` and `defaultAccesses` are required. Corresponds to [`liveblocks.createRoom`](/docs/api-reference/liveblocks-node#post-rooms). \n- `defaultAccessess` could be `[]` or `[\"room:write\"]` (private or public). \n- `metadata` could be key/value as `string` or `string[]`. `metadata` supports maximum 50 entries. Key length has a limit of 40 characters maximum. Value length has a limit of 256 characters maximum. `metadata` is optional field.\n- `usersAccesses` could be `[]` or `[\"room:write\"]` for every records. `usersAccesses` can contain 100 ids maximum. Id length has a limit of 40 characters. `usersAccesses` is optional field.\n- `groupsAccesses` are optional fields.\n"
					},
					"response": [
						{
							"id": "d8ee895d-52fb-4db4-ac99-6d52aa7cf5bf",
							"name": "Success. Returns the created room.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "263e978e-177c-4c94-bbf4-3be244ce3bce"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"room\",\n  \"lastConnectionAt\": \"<dateTime>\",\n  \"createdAt\": \"<dateTime>\",\n  \"metadata\": {\n    \"aliqua_531\": \"<string>\"\n  },\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {}\n}"
						},
						{
							"id": "96d27ecd-65b9-4127-9325-312587a9597f",
							"name": "Missing or wrong credentials.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "90d4f03e-3b49-44fe-936f-5dab42860635"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						},
						{
							"id": "3338d27d-6990-4e25-b4b5-11d42700d25f",
							"name": "Unauthorized access.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5f43900f-449b-470c-b467-0b9adf48558a"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						},
						{
							"id": "83afe552-a4a0-47cd-a88a-2d56e96bcc70",
							"name": "Room already exists.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "c37dda42-bc86-4cd3-a0a4-4235c7fc1eea"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						},
						{
							"id": "24dd3943-df55-4ecc-bf7c-336947a81721",
							"name": "Unprocessable entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"defaultAccesses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"usersAccesses\": {},\n  \"groupsAccesses\": {},\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rooms"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "4a70f246-7cd3-410d-b48d-4cca70bbce19"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "2652e2be-a6a6-48c2-b58d-526996e8aaaf"
		},
		{
			"name": "schemas",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get schema",
							"id": "e9262a62-1709-496b-bc06-44a489df0548",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schemas/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schemas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the schema"
										}
									]
								},
								"description": "This endpoint retrieves a schema by its ID. The ID is a combination of the schema name and version. For example, `my-schema@1`. Corresponds to [`liveblocks.getSchema`](/docs/api-reference/liveblocks-node#get-create-new-schema)."
							},
							"response": [
								{
									"id": "34851219-7f1f-4f86-9a36-bed844f3814d",
									"name": "Success. Found the schema and returns it as JSON.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "60b03643-1f45-43db-acba-c99c72e282fa"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<number>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"body\": \"<string>\"\n}"
								},
								{
									"id": "6a527b4d-963f-4c28-90ad-4ac83911a95b",
									"name": "Missing or wrong credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "bde36b2a-b097-485e-99a0-5ebee4cac967"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "03adf9a2-feef-4931-80f2-48d03aeb9667",
									"name": "Schema not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "b064aeca-287f-48d1-a961-fc2d0a6e65b6"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update schema",
							"id": "290e4ae2-8247-42b8-8d6e-91a22d73bcca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/schemas/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schemas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the schema"
										}
									]
								},
								"description": "This endpoint updates the body for the schema. A schema can only be updated if it is not used by any room. Corresponds to [`liveblocks.updateSchema`](/docs/api-reference/liveblocks-node#put-update-new-schema)."
							},
							"response": [
								{
									"id": "c893105d-7d6f-4d73-8a10-2ae9427210aa",
									"name": "Success. Updates the new schema and increments the version. The schema `body` is returned as JSON.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "fa395408-1f56-4ae3-b43f-84cb364fb9f3"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<number>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"body\": \"<string>\"\n}"
								},
								{
									"id": "3e816522-c547-493b-9f01-9e705af2ec93",
									"name": "Missing or wrong credentials.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "5d928436-66ce-41a2-9f6e-2463d3ae9ced"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "10d540b8-1ce0-4e8d-b4a5-08cc174c3ebe",
									"name": "Unauthorized access.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "dea37bfb-e391-48f2-bf94-15c9aeff0432"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "439eb9c6-118e-4277-83e9-72cf96aaea40",
									"name": "Unprocessable entity.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "13e6c4ed-f4cc-49f6-ab2a-c8f3f86b6708"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete schema",
							"id": "c16277ff-84e6-445c-9c67-fa7b135a6790",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schemas/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schemas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the schema"
										}
									]
								},
								"description": "This endpoint deletes a schema by its ID. The ID is a combination of the schema name and version. For example, `my-schema@1`. A schema can only be deleted if it is not attached to a room. Corresponds to [`liveblocks.deleteSchema`](/docs/api-reference/liveblocks-node#delete-a-schema)."
							},
							"response": [
								{
									"id": "caa4fe91-4573-4cdc-879a-8ca77c9572a8",
									"name": "Success. Schema was delated",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"id": "869282d8-8785-4bb1-8bfa-ff9fdb72e285",
									"name": "Missing or wrong credentials.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "cabc2038-aa51-4676-a073-caaf1dd642ba"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								},
								{
									"id": "aa45ac9b-651a-452f-84a0-db34647805d7",
									"name": "Unauthorized access.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schemas",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"uuid": "fe26bcf4-e749-4b27-b115-2a946e5302ed"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "60ebe272-230f-4a7e-b3ff-9123a79b2ac7"
				},
				{
					"name": "Create schema",
					"id": "eea8a678-692b-4e0c-aa76-5459793214a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/schemas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schemas"
							]
						},
						"description": "This endpoint creates a new schema which can be referenced later to enforce a room’s Storage data structure. Corresponds to [`liveblocks.createSchema`](/docs/api-reference/liveblocks-node#post-create-new-schema). \n\nThe schema consists of a name (for referencing it), and a body, which specifies the exact allowed shape of data in the room. This body is a multi-line string written in the Liveblocks [schema syntax](/docs/platform/schema-validation/syntax)."
					},
					"response": [
						{
							"id": "c197abf3-c7dd-46f8-9c64-88b576727fab",
							"name": "Success. Creates the new schema and returns it as JSON.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schemas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "a8bfe014-7862-489a-aae4-0ae33e44db5f"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<number>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"body\": \"<string>\"\n}"
						},
						{
							"id": "785c98be-6a67-447c-bf5d-412cdf874ccc",
							"name": "Missing or wrong credentials.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schemas"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "54aeea3d-a3be-4994-b138-3eb85f69bb34"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						},
						{
							"id": "5f416834-7952-48a8-a298-2c2f62b98f4a",
							"name": "Unprocessable entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schemas"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "503012d2-7306-4e4d-aaf9-7e8b8fe6778f"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "73137161-35da-4b61-89ff-b22df2896c86"
		},
		{
			"name": "authorize-user",
			"item": [
				{
					"name": "Get access token with secret key",
					"id": "d312c3e2-c4c6-4957-824a-621923f32bed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"permissions\": {\n    \"autec5\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authorize-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorize-user"
							]
						},
						"description": "This endpoint lets your application server (your back end) obtain a token that one of its clients (your frontend) can use to enter a Liveblocks room. You use this endpoint to implement your own application’s custom authentication endpoint. When making this request, you’ll have to use your secret key.\n\n**Important:** The difference with an [ID token](#post-identify-user) is that an access token holds all the permissions, and is the source of truth. With ID tokens, permissions are set in the Liveblocks back end (through REST API calls) and \"checked at the door\" every time they are used to enter a room.\n\n**Note:** When using the `@liveblocks/node` package, you can use [`Liveblocks.prepareSession`](/docs/api-reference/liveblocks-node#access-tokens) in your back end to build this request.\n\nYou can pass the property `userId` in the request’s body. This can be whatever internal identifier you use for your user accounts as long as it uniquely identifies an account. The property `userId` is used by Liveblocks to calculate your account’s Monthly Active Users. One unique `userId` corresponds to one MAU.\n\nAdditionally, you can set custom metadata to the token, which will be publicly accessible by other clients through the `user.info` property. This is useful for storing static data like avatar images or the user’s display name.\n\nLastly, you’ll specify the exact permissions to give to the user using the `permissions` field. This is done in an object where the keys are room names, or room name patterns (ending in a `*`), and a list of permissions to assign the user for any room that matches that name exactly (or starts with the pattern’s prefix). For tips, see [Manage permissions with access tokens](/docs/authentication/access-token)."
					},
					"response": [
						{
							"id": "0d5adb5c-6cb4-4ac9-a5f9-8c59dd3c786f",
							"name": "Success. Returns an access token that can be used to enter one or more rooms.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"permissions\": {\n    \"autec5\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorize-user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorize-user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "2abcba9a-ca9e-4915-bd72-1f6c3ebcc8cd"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"<string>\"\n}"
						},
						{
							"id": "465c32cc-c7d3-41c9-8c4c-85ddb0b4f2b2",
							"name": "Unauthorized access.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"<string>\",\n  \"userInfo\": {},\n  \"permissions\": {\n    \"autec5\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorize-user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorize-user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "762cc08f-d919-4cb6-9492-2cffce8c6d0f"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "36121ab6-95c4-4321-99aa-9a51d822cb49"
		},
		{
			"name": "identify-user",
			"item": [
				{
					"name": "Get ID token with secret key",
					"id": "c3e2520d-19bc-4841-bfa1-430562e99f83",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userInfo\": {}\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identify-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identify-user"
							]
						},
						"description": "This endpoint lets your application server (your back end) obtain a token that one of its clients (your frontend) can use to enter a Liveblocks room. You use this endpoint to implement your own application’s custom authentication endpoint. When using this endpoint to obtain ID tokens, you should manage your permissions by assigning user and/or group permissions to rooms explicitly, see our [Manage permissions with ID tokens](/docs/authentication/id-token) section.\n\n**Important:** The difference with an [access token](#post-authorize-user) is that an ID token doesn’t hold any permissions itself. With ID tokens, permissions are set in the Liveblocks back end (through REST API calls) and \"checked at the door\" every time they are used to enter a room. With access tokens, all permissions are set in the token itself, and thus controlled from your back end entirely.\n\n**Note:** When using the `@liveblocks/node` package, you can use [`Liveblocks.identifyUser`](/docs/api-reference/liveblocks-node) in your back end to build this request.\n\nYou can pass the property `userId` in the request’s body. This can be whatever internal identifier you use for your user accounts as long as it uniquely identifies an account. The property `userId` is used by Liveblocks to calculate your account’s Monthly Active Users. One unique `userId` corresponds to one MAU.\n\nIf you want to use group permissions, you can also declare which `groupIds` this user belongs to. The group ID values are yours, but they will have to match the group IDs you assign permissions to when assigning permissions to rooms, see [Manage permissions with ID tokens](/docs/authentication/id-token)).\n\nAdditionally, you can set custom metadata to the token, which will be publicly accessible by other clients through the `user.info` property. This is useful for storing static data like avatar images or the user’s display name."
					},
					"response": [
						{
							"id": "e1a1cb94-cfa1-486a-bc28-7dc5bea7ecff",
							"name": "Success. Returns an ID token that can be used to enter one or more rooms.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userInfo\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identify-user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identify-user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "5f6fa09c-1708-4473-bcd2-38705f307bf2"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"<string>\"\n}"
						},
						{
							"id": "8afc996c-b413-4389-bda0-c492779c88dc",
							"name": "Unauthorized access.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userInfo\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identify-user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identify-user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"uuid": "0cc0ae01-6259-4534-85b6-226c0a992a3f"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"suggestion\": \"<string>\",\n  \"docs\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "b1015fe7-4077-4ad5-a6b8-2a4b6b4ad721"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{userId}",
					"item": [
						{
							"name": "inbox-notifications",
							"item": [
								{
									"name": "{inboxNotificationId}",
									"item": [
										{
											"name": "Get inbox notification",
											"id": "2edb1559-d986-4fe9-b3c0-1622153bdd7d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications",
														":inboxNotificationId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) ID of the user"
														},
														{
															"key": "inboxNotificationId",
															"value": "<string>",
															"description": "(Required) ID of the inbox notification"
														}
													]
												},
												"description": "This endpoint returns a user’s inbox notification by its ID. Corresponds to [`liveblocks.getInboxNotification`](/docs/api-reference/liveblocks-node#get-users-userId-inboxNotifications-inboxNotificationId)."
											},
											"response": [
												{
													"id": "0e0eaf40-bdd8-4e8f-abee-761b5943814d",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "10e95184-bc07-4fad-b9a7-c7c3ce6f57d4"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"threadId\": \"<string>\",\n  \"roomId\": \"<string>\",\n  \"readAt\": \"<dateTime>\",\n  \"notifiedAt\": \"<dateTime>\"\n}"
												},
												{
													"id": "8a2192f6-f756-48e5-bc7d-b1009151851a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"id": "a42e2e04-5a21-4aac-9100-bd5b67b54fdc",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"id": "9c562ab0-4629-4647-8954-613c77a6f832",
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										},
										{
											"name": "Delete inbox notification",
											"id": "d2058414-07e5-4e10-972e-82442d1c539a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications",
														":inboxNotificationId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) ID of the user"
														},
														{
															"key": "inboxNotificationId",
															"value": "<string>",
															"description": "(Required) ID of the inbox notification"
														}
													]
												},
												"description": "This endpoint deletes a user’s inbox notification by its ID."
											},
											"response": [
												{
													"id": "4d201095-44d6-44ef-adce-186021733a83",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"id": "ad49b80f-2d36-44b8-a948-da5edfc63433",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"id": "6cf9a93c-1da4-47b1-9f6b-dd1d29fa4d0a",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"id": "411c50e4-49df-48b4-b62b-cb38414631cb",
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/inbox-notifications/:inboxNotificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"inbox-notifications",
																":inboxNotificationId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "inboxNotificationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									],
									"id": "13e9cfd2-1218-4702-91b7-dcfaa24e8702"
								},
								{
									"name": "Delete all inbox notifications",
									"id": "34ddd6f7-5f0b-40ba-93c4-4a33992a3ad9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/inbox-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"inbox-notifications"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) ID of the user"
												}
											]
										},
										"description": "This endpoint deletes all the user’s inbox notifications."
									},
									"response": [
										{
											"id": "61d844e6-8f36-43e2-8451-0c46a7caca75",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "4a4512c3-8654-48d6-9c9a-1cd97e41ddd2",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "1951f665-300c-42be-b3ce-555ff5bb103e",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "8fc043d1-3ff3-462e-afe8-f257554b9d68",
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get all inbox notifications",
									"id": "de7addbe-ef3f-4ef4-b1f2-fbe49dd4bb20",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/inbox-notifications?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"inbox-notifications"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>",
													"description": "Query to filter notifications. You can filter by `unread`, for example, `unread:true`."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) ID of the user"
												}
											]
										},
										"description": "This endpoint returns all the user’s inbox notifications. Corresponds to [`liveblocks.getInboxNotifications`](/docs/api-reference/liveblocks-node#get-users-userId-inboxNotifications)."
									},
									"response": [
										{
											"id": "de8bf81b-5eac-4eaf-99e6-e09a85f932d5",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"query": [
														{
															"description": "Query to filter notifications. You can filter by `unread`, for example, `unread:true`.",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "68aede87-1d62-4dfe-97c9-bf4160e0b103"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"threadId\": \"<string>\",\n    \"roomId\": \"<string>\",\n    \"readAt\": \"<dateTime>\",\n    \"notifiedAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"threadId\": \"<string>\",\n    \"roomId\": \"<string>\",\n    \"readAt\": \"<dateTime>\",\n    \"notifiedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"id": "4a1e63bb-62b2-4fda-b5d6-2a9ce0f526b5",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"query": [
														{
															"description": "Query to filter notifications. You can filter by `unread`, for example, `unread:true`.",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"id": "fb4cfbde-4b82-458e-8735-ab00e77c3443",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/inbox-notifications?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"inbox-notifications"
													],
													"query": [
														{
															"description": "Query to filter notifications. You can filter by `unread`, for example, `unread:true`.",
															"key": "query",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										}
									]
								}
							],
							"id": "defb3cf5-4113-4265-b342-cc57af41912a"
						}
					],
					"id": "2f5e57ec-8e8e-4ebd-b2c9-bb838567a2f3"
				}
			],
			"id": "08fdc38d-60e6-4701-95da-91b0c667c500"
		},
		{
			"name": "inbox-notifications",
			"item": [
				{
					"name": "trigger",
					"item": [
						{
							"name": "Trigger inbox notification",
							"id": "cac104c2-b4ff-4758-9075-7f5fe267db36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"activityData\": {},\n  \"roomId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inbox-notifications/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbox-notifications",
										"trigger"
									]
								},
								"description": "This endpoint triggers an inbox notification. Corresponds to [`liveblocks.triggerInboxNotification`](/docs/api-reference/liveblocks-node#post-inbox-notifications-trigger)."
							},
							"response": [
								{
									"id": "0d413fc7-01b9-468f-9562-301b2801f81b",
									"name": "No Content",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"activityData\": {},\n  \"roomId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inbox-notifications/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbox-notifications",
												"trigger"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"id": "6788bc81-9b3e-43cd-80cd-a539485563ee",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"activityData\": {},\n  \"roomId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inbox-notifications/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbox-notifications",
												"trigger"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"id": "50c7c1cf-91f2-41f0-9248-c82fecf0f312",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"activityData\": {},\n  \"roomId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inbox-notifications/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbox-notifications",
												"trigger"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"id": "26b665ba-e029-4372-b3f8-77346e177d6f",
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"activityData\": {},\n  \"roomId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inbox-notifications/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbox-notifications",
												"trigger"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"id": "b5c01b5f-713b-4837-91a3-2949cced4372",
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"subjectId\": \"<string>\",\n  \"activityData\": {},\n  \"roomId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inbox-notifications/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbox-notifications",
												"trigger"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"id": "953924bb-0d19-47b8-b00d-443951c5d689"
				}
			],
			"id": "66a5c3a0-0843-4077-baf2-cec34754a239"
		}
	],
	"variable": [
		{
			"id": "6674803a-94a2-4358-a57e-0e507656e8a6",
			"key": "baseUrl",
			"value": "https://api.liveblocks.io/v2"
		}
	]
}